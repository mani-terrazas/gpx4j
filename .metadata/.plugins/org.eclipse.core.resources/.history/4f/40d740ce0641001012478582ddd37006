package org.casaca.gpx4j.core.driver;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Properties;

import org.casaca.gpx4j.core.driver.reader.IGpxReader;
import org.casaca.gpx4j.core.driver.writer.IGpxWriter;
import org.casaca.gpx4j.core.exception.GpxFileNotFoundException;
import org.casaca.gpx4j.core.exception.GpxIOException;
import org.casaca.gpx4j.core.exception.GpxReaderException;
import org.casaca.gpx4j.core.util.Constants;

public class GpxDriver {
	private IGpxReader reader;
	private IGpxWriter writer;
	private Properties properties;
	
	private static GpxDriver driver = null;
	
	private GpxDriver(){
		this.properties = new Properties();
		this.reader = null;
		this.writer = null;
	}
	
	public void loadProperties(String filePath) throws GpxFileNotFoundException, GpxIOException{
		this.properties = new Properties();
		try {
			this.properties.load(new FileInputStream(filePath));
		} catch (FileNotFoundException e) {
			throw new GpxFileNotFoundException("The properties file \""+filePath+"\"");
		} catch (IOException e) {
			throw new GpxIOException(e);
		}
	}
	
	public IGpxReader getReader() throws GpxReaderException{
		if(this.reader == null){
			String className = this.properties.getProperty(Constants.DRIVER_READER_CLASS_NAME);
			if(className == null)
				throw new GpxReaderException("Property "+Constants.DRIVER_READER_CLASS_NAME+" not found in properties file");
			
			try {
				this.reader = (IGpxReader)Class.forName(className).newInstance();
			} catch (InstantiationException e) {
				throw new GpxReaderException(e);
			} catch (IllegalAccessException e) {
				throw new GpxReaderException(e);
			} catch (ClassNotFoundException e) {
				throw new GpxReaderException(e);
			}
		}
		
		return reader;
	}
}
